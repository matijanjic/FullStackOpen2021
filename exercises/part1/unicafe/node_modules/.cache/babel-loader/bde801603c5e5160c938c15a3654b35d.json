{"ast":null,"code":"var _jsxFileName = \"/Users/matijajanjic/Documents/FSO2021/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    clickHandler,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: clickHandler,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 42\n  }, this);\n};\n\n_c = Button;\n\nconst Display = _ref2 => {\n  let {\n    text\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 29\n  }, this);\n};\n\n_c2 = Display;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const total = good + bad + neutral;\n\n  const average = (good, bad, total) => {\n    return (good - bad) / total;\n  };\n\n  console.log(average);\n\n  const rateGood = () => {\n    setGood(good + 1);\n  };\n\n  const rateNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const rateBad = () => {\n    setBad(bad + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickHandler: rateGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickHandler: rateNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickHandler: rateBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: 'good: ' + good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: 'neutral: ' + neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: 'bad: ' + bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: 'total: ' + total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: 'average: ' + average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Display\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/matijajanjic/Documents/FSO2021/part1/unicafe/src/App.js"],"names":["React","useState","Button","clickHandler","text","Display","App","good","setGood","neutral","setNeutral","bad","setBad","total","average","console","log","rateGood","rateNeutral","rateBad"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,MAAM,GAAG;AAAA,MAAC;AAACC,IAAAA,YAAD;AAAeC,IAAAA;AAAf,GAAD;AAAA,sBAA0B;AAAQ,IAAA,OAAO,EAAED,YAAjB;AAAA,cAAgCC;AAAhC;AAAA;AAAA;AAAA;AAAA,UAA1B;AAAA,CAAf;;KAAMF,M;;AACN,MAAMG,OAAO,GAAG;AAAA,MAAC;AAACD,IAAAA;AAAD,GAAD;AAAA,sBAAY;AAAA,cAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,UAAZ;AAAA,CAAhB;;MAAMC,O;;AAGN,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,CAAD,CAA9B;AAEA,QAAMY,KAAK,GAAGN,IAAI,GAAGI,GAAP,GAAaF,OAA3B;;AAEA,QAAMK,OAAO,GAAG,CAACP,IAAD,EAAOI,GAAP,EAAYE,KAAZ,KAAsB;AACpC,WAAO,CAACN,IAAI,GAAGI,GAAR,IAAeE,KAAtB;AACD,GAFD;;AAIAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AAEA,QAAMG,QAAQ,GAAG,MAAM;AACrBT,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AAGD,GAJD;;AAMA,QAAMW,WAAW,GAAE,MAAM;AACvBR,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AAGD,GAJD;;AAMA,QAAMU,OAAO,GAAG,MAAM;AACpBP,IAAAA,MAAM,CAACD,GAAG,GAAG,CAAP,CAAN;AAGD,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAEM,QAAtB;AAAgC,MAAA,IAAI,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAEC,WAAtB;AAAmC,MAAA,IAAI,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAEC,OAAtB;AAA+B,MAAA,IAAI,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,YAJF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAE,WAAWZ;AAA1B;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAE,cAAcE;AAA7B;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAE,UAAUE;AAAzB;AAAA;AAAA;AAAA;AAAA,YATF,eAUE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAE,YAAYE;AAA3B;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAE,cAAcC;AAA7B;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAlDD;;GAAMR,G;;MAAAA,G;AAoDN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst Button = ({clickHandler, text}) => <button onClick={clickHandler}>{text}</button>\nconst Display = ({text}) => <p>{text}</p>\n  \n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  \n  const total = good + bad + neutral\n\n  const average = (good, bad, total) => {\n    return (good - bad) / total\n  }\n  \n  console.log(average)\n\n  const rateGood = () => {\n    setGood(good + 1)\n    \n    \n  }\n\n  const rateNeutral= () => {\n    setNeutral(neutral + 1)\n    \n    \n  }\n\n  const rateBad = () => {\n    setBad(bad + 1)\n    \n    \n  }\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button clickHandler={rateGood} text='good'></Button>\n      <Button clickHandler={rateNeutral} text='neutral'></Button>\n      <Button clickHandler={rateBad} text='bad'></Button>\n\n      <h1>statistics</h1>\n      <Display text={'good: ' + good}></Display>\n      <Display text={'neutral: ' + neutral}></Display>\n      <Display text={'bad: ' + bad}></Display>\n      <Display text={'total: ' + total}></Display>\n      <Display text={'average: ' + average}></Display>\n      \n\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}