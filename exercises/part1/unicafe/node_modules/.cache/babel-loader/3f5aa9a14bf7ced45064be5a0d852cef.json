{"ast":null,"code":"var _jsxFileName = \"/Users/matijajanjic/Documents/FSO2021/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    clickHandler,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: clickHandler,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 42\n  }, this);\n};\n\n_c = Button;\n\nconst StatisticLine = _ref2 => {\n  let {\n    text,\n    value\n  } = _ref2;\n\n  if (text === 'positive: ') {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [value, \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = StatisticLine;\n\nconst Statistics = _ref3 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref3;\n  const total = good + bad + neutral;\n  const average = (good - bad) / total;\n  const positive = good / total * 100;\n\n  if (total === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback given.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: 'good: ',\n          value: good\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: 'neutral: ',\n          value: neutral\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: 'bad: ',\n          value: bad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: 'total: ',\n          value: total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: 'average: ',\n          value: average\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: 'positive: ',\n          value: positive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const rateGood = () => {\n    setGood(good + 1);\n  };\n\n  const rateNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const rateBad = () => {\n    setBad(bad + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickHandler: rateGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickHandler: rateNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickHandler: rateBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      neutral: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/matijajanjic/Documents/FSO2021/part1/unicafe/src/App.js"],"names":["React","useState","Button","clickHandler","text","StatisticLine","value","Statistics","good","neutral","bad","total","average","positive","App","setGood","setNeutral","setBad","rateGood","rateNeutral","rateBad"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,MAAM,GAAG;AAAA,MAAC;AAACC,IAAAA,YAAD;AAAeC,IAAAA;AAAf,GAAD;AAAA,sBAA0B;AAAQ,IAAA,OAAO,EAAED,YAAjB;AAAA,cAAgCC;AAAhC;AAAA;AAAA;AAAA;AAAA,UAA1B;AAAA,CAAf;;KAAMF,M;;AAGN,MAAMG,aAAa,GAAG,SAAkB;AAAA,MAAjB;AAACD,IAAAA,IAAD;AAAME,IAAAA;AAAN,GAAiB;;AACtC,MAAIF,IAAI,KAAK,YAAb,EAA2B;AACzB,wBACE;AAAA,8BACA;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,cADA,eACe;AAAA,mBAAKE,KAAL;AAAA;AAAA;AAAA;AAAA;AAAA,cADf;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,sBACE;AAAA,4BACA;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YADA,eACe;AAAA,gBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,YADf;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAbD;;MAAMD,a;;AAeN,MAAME,UAAU,GAAG,SAA0B;AAAA,MAAzB;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,GAAyB;AAC3C,QAAMC,KAAK,GAAGH,IAAI,GAAGE,GAAP,GAAaD,OAA3B;AACA,QAAMG,OAAO,GAAG,CAACJ,IAAI,GAAGE,GAAR,IAAeC,KAA/B;AACA,QAAME,QAAQ,GAAGL,IAAI,GAAGG,KAAP,GAAe,GAAhC;;AACA,MAAIA,KAAK,KAAK,CAAd,EAAiB;AACf,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,6BACA;AAAA,gCACA,QAAC,aAAD;AAAe,UAAA,IAAI,EAAE,QAArB;AAA+B,UAAA,KAAK,EAAEH;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,aAAD;AAAe,UAAA,IAAI,EAAE,WAArB;AAAkC,UAAA,KAAK,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA,QAAC,aAAD;AAAe,UAAA,IAAI,EAAE,OAArB;AAA8B,UAAA,KAAK,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA,QAAC,aAAD;AAAe,UAAA,IAAI,EAAE,SAArB;AAAgC,UAAA,KAAK,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAJA,eAKA,QAAC,aAAD;AAAe,UAAA,IAAI,EAAE,WAArB;AAAkC,UAAA,KAAK,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBALA,eAMA,QAAC,aAAD;AAAe,UAAA,IAAI,EAAE,YAArB;AAAmC,UAAA,KAAK,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA,gBANA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AAeD,CA1BD;;MAAMN,U;;AA4BN,MAAMO,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACN,IAAD,EAAOO,OAAP,IAAkBd,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUO,UAAV,IAAwBf,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACS,GAAD,EAAMO,MAAN,IAAgBhB,QAAQ,CAAC,CAAD,CAA9B;;AAEA,QAAMiB,QAAQ,GAAG,MAAM;AACrBH,IAAAA,OAAO,CAACP,IAAI,GAAG,CAAR,CAAP;AACD,GAFD;;AAIA,QAAMW,WAAW,GAAE,MAAM;AACvBH,IAAAA,UAAU,CAACP,OAAO,GAAG,CAAX,CAAV;AACD,GAFD;;AAIA,QAAMW,OAAO,GAAG,MAAM;AACpBH,IAAAA,MAAM,CAACP,GAAG,GAAG,CAAP,CAAN;AACD,GAFD;;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAEQ,QAAtB;AAAgC,MAAA,IAAI,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAEC,WAAtB;AAAmC,MAAA,IAAI,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAEC,OAAtB;AAA+B,MAAA,IAAI,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEZ,IAAlB;AAAwB,MAAA,GAAG,EAAEE,GAA7B;AAAkC,MAAA,OAAO,EAAED;AAA3C;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA5BD;;GAAMK,G;;MAAAA,G;AA8BN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst Button = ({clickHandler, text}) => <button onClick={clickHandler}>{text}</button>\n\n\nconst StatisticLine = ({text,value}) => {\n  if (text === 'positive: ') {\n    return (\n      <tr>\n      <td>{text}</td><td>{value} %</td>\n      </tr>\n    )\n  }\n  return (\n    <tr>\n    <td>{text}</td><td>{value}</td>\n    </tr>\n  )\n}\n\nconst Statistics = ({good, neutral, bad}) => {\n  const total = good + bad + neutral \n  const average = (good - bad) / total\n  const positive = good / total * 100\n  if (total === 0) {\n    return (\n      <div>\n        <p>No feedback given.</p>\n      </div>\n    )\n  }\n  return (\n    <>\n    <h1>statistics</h1>\n    <tbody>\n    <table>\n    <StatisticLine text={'good: '} value={good}/>\n    <StatisticLine text={'neutral: '} value={neutral}/>\n    <StatisticLine text={'bad: '} value={bad}/>\n    <StatisticLine text={'total: '} value={total}/>\n    <StatisticLine text={'average: '} value={average}/>\n    <StatisticLine text={'positive: '} value={positive}/>\n    </table>\n    </tbody>\n    </>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const rateGood = () => {\n    setGood(good + 1)\n  }\n\n  const rateNeutral= () => {\n    setNeutral(neutral + 1)\n  }\n\n  const rateBad = () => {\n    setBad(bad + 1)\n  }\n  \n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button clickHandler={rateGood} text='good'></Button>\n      <Button clickHandler={rateNeutral} text='neutral'></Button>\n      <Button clickHandler={rateBad} text='bad'></Button>\n      <Statistics good={good} bad={bad} neutral={neutral}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}